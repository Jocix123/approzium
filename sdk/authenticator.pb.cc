// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authenticator.proto

#include "authenticator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace dbauth {
namespace authenticator {
namespace protos {
class DBUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBUserRequest>
      _instance;
} _DBUserRequest_default_instance_;
class DBHashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBHashRequest>
      _instance;
} _DBHashRequest_default_instance_;
class DBUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBUserResponse>
      _instance;
} _DBUserResponse_default_instance_;
class DBHashResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBHashResponse>
      _instance;
} _DBHashResponse_default_instance_;
}  // namespace protos
}  // namespace authenticator
}  // namespace dbauth
namespace protobuf_authenticator_2eproto {
void InitDefaultsDBUserRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::dbauth::authenticator::protos::_DBUserRequest_default_instance_;
    new (ptr) ::dbauth::authenticator::protos::DBUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbauth::authenticator::protos::DBUserRequest::InitAsDefaultInstance();
}

void InitDefaultsDBUserRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBUserRequestImpl);
}

void InitDefaultsDBHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::dbauth::authenticator::protos::_DBHashRequest_default_instance_;
    new (ptr) ::dbauth::authenticator::protos::DBHashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbauth::authenticator::protos::DBHashRequest::InitAsDefaultInstance();
}

void InitDefaultsDBHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBHashRequestImpl);
}

void InitDefaultsDBUserResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::dbauth::authenticator::protos::_DBUserResponse_default_instance_;
    new (ptr) ::dbauth::authenticator::protos::DBUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbauth::authenticator::protos::DBUserResponse::InitAsDefaultInstance();
}

void InitDefaultsDBUserResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBUserResponseImpl);
}

void InitDefaultsDBHashResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::dbauth::authenticator::protos::_DBHashResponse_default_instance_;
    new (ptr) ::dbauth::authenticator::protos::DBHashResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dbauth::authenticator::protos::DBHashResponse::InitAsDefaultInstance();
}

void InitDefaultsDBHashResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBHashResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBUserRequest, identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBHashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBHashRequest, identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBHashRequest, salt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBUserResponse, dbuser_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBHashResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dbauth::authenticator::protos::DBHashResponse, hash_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dbauth::authenticator::protos::DBUserRequest)},
  { 6, -1, sizeof(::dbauth::authenticator::protos::DBHashRequest)},
  { 13, -1, sizeof(::dbauth::authenticator::protos::DBUserResponse)},
  { 19, -1, sizeof(::dbauth::authenticator::protos::DBHashResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbauth::authenticator::protos::_DBUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbauth::authenticator::protos::_DBHashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbauth::authenticator::protos::_DBUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dbauth::authenticator::protos::_DBHashResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "authenticator.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023authenticator.proto\022\033dbauth.authentica"
      "tor.protos\"!\n\rDBUserRequest\022\020\n\010identity\030"
      "\001 \001(\t\"/\n\rDBHashRequest\022\020\n\010identity\030\001 \001(\t"
      "\022\014\n\004salt\030\002 \001(\014\" \n\016DBUserResponse\022\016\n\006dbus"
      "er\030\001 \001(\t\"\036\n\016DBHashResponse\022\014\n\004hash\030\001 \001(\t"
      "2\337\001\n\rAuthenticator\022f\n\tGetDBUser\022*.dbauth"
      ".authenticator.protos.DBUserRequest\032+.db"
      "auth.authenticator.protos.DBUserResponse"
      "\"\000\022f\n\tGetDBHash\022*.dbauth.authenticator.p"
      "rotos.DBHashRequest\032+.dbauth.authenticat"
      "or.protos.DBHashResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 434);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "authenticator.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_authenticator_2eproto
namespace dbauth {
namespace authenticator {
namespace protos {

// ===================================================================

void DBUserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBUserRequest::kIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBUserRequest::DBUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authenticator_2eproto::InitDefaultsDBUserRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbauth.authenticator.protos.DBUserRequest)
}
DBUserRequest::DBUserRequest(const DBUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity().size() > 0) {
    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  // @@protoc_insertion_point(copy_constructor:dbauth.authenticator.protos.DBUserRequest)
}

void DBUserRequest::SharedCtor() {
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DBUserRequest::~DBUserRequest() {
  // @@protoc_insertion_point(destructor:dbauth.authenticator.protos.DBUserRequest)
  SharedDtor();
}

void DBUserRequest::SharedDtor() {
  identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBUserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBUserRequest::descriptor() {
  ::protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBUserRequest& DBUserRequest::default_instance() {
  ::protobuf_authenticator_2eproto::InitDefaultsDBUserRequest();
  return *internal_default_instance();
}

DBUserRequest* DBUserRequest::New(::google::protobuf::Arena* arena) const {
  DBUserRequest* n = new DBUserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dbauth.authenticator.protos.DBUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DBUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbauth.authenticator.protos.DBUserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string identity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity().data(), static_cast<int>(this->identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dbauth.authenticator.protos.DBUserRequest.identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbauth.authenticator.protos.DBUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbauth.authenticator.protos.DBUserRequest)
  return false;
#undef DO_
}

void DBUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbauth.authenticator.protos.DBUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBUserRequest.identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbauth.authenticator.protos.DBUserRequest)
}

::google::protobuf::uint8* DBUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbauth.authenticator.protos.DBUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBUserRequest.identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbauth.authenticator.protos.DBUserRequest)
  return target;
}

size_t DBUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbauth.authenticator.protos.DBUserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string identity = 1;
  if (this->identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbauth.authenticator.protos.DBUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DBUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbauth.authenticator.protos.DBUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbauth.authenticator.protos.DBUserRequest)
    MergeFrom(*source);
  }
}

void DBUserRequest::MergeFrom(const DBUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbauth.authenticator.protos.DBUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity().size() > 0) {

    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
}

void DBUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbauth.authenticator.protos.DBUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBUserRequest::CopyFrom(const DBUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbauth.authenticator.protos.DBUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserRequest::IsInitialized() const {
  return true;
}

void DBUserRequest::Swap(DBUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBUserRequest::InternalSwap(DBUserRequest* other) {
  using std::swap;
  identity_.Swap(&other->identity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBUserRequest::GetMetadata() const {
  protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBHashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBHashRequest::kIdentityFieldNumber;
const int DBHashRequest::kSaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBHashRequest::DBHashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authenticator_2eproto::InitDefaultsDBHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbauth.authenticator.protos.DBHashRequest)
}
DBHashRequest::DBHashRequest(const DBHashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity().size() > 0) {
    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.salt().size() > 0) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  // @@protoc_insertion_point(copy_constructor:dbauth.authenticator.protos.DBHashRequest)
}

void DBHashRequest::SharedCtor() {
  identity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DBHashRequest::~DBHashRequest() {
  // @@protoc_insertion_point(destructor:dbauth.authenticator.protos.DBHashRequest)
  SharedDtor();
}

void DBHashRequest::SharedDtor() {
  identity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBHashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBHashRequest::descriptor() {
  ::protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBHashRequest& DBHashRequest::default_instance() {
  ::protobuf_authenticator_2eproto::InitDefaultsDBHashRequest();
  return *internal_default_instance();
}

DBHashRequest* DBHashRequest::New(::google::protobuf::Arena* arena) const {
  DBHashRequest* n = new DBHashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBHashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dbauth.authenticator.protos.DBHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DBHashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbauth.authenticator.protos.DBHashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string identity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity().data(), static_cast<int>(this->identity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dbauth.authenticator.protos.DBHashRequest.identity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes salt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbauth.authenticator.protos.DBHashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbauth.authenticator.protos.DBHashRequest)
  return false;
#undef DO_
}

void DBHashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbauth.authenticator.protos.DBHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBHashRequest.identity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->identity(), output);
  }

  // bytes salt = 2;
  if (this->salt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->salt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbauth.authenticator.protos.DBHashRequest)
}

::google::protobuf::uint8* DBHashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbauth.authenticator.protos.DBHashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identity = 1;
  if (this->identity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity().data(), static_cast<int>(this->identity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBHashRequest.identity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->identity(), target);
  }

  // bytes salt = 2;
  if (this->salt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->salt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbauth.authenticator.protos.DBHashRequest)
  return target;
}

size_t DBHashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbauth.authenticator.protos.DBHashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string identity = 1;
  if (this->identity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity());
  }

  // bytes salt = 2;
  if (this->salt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->salt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBHashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbauth.authenticator.protos.DBHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DBHashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBHashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbauth.authenticator.protos.DBHashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbauth.authenticator.protos.DBHashRequest)
    MergeFrom(*source);
  }
}

void DBHashRequest::MergeFrom(const DBHashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbauth.authenticator.protos.DBHashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identity().size() > 0) {

    identity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_);
  }
  if (from.salt().size() > 0) {

    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
}

void DBHashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbauth.authenticator.protos.DBHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBHashRequest::CopyFrom(const DBHashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbauth.authenticator.protos.DBHashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBHashRequest::IsInitialized() const {
  return true;
}

void DBHashRequest::Swap(DBHashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBHashRequest::InternalSwap(DBHashRequest* other) {
  using std::swap;
  identity_.Swap(&other->identity_);
  salt_.Swap(&other->salt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBHashRequest::GetMetadata() const {
  protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBUserResponse::kDbuserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBUserResponse::DBUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authenticator_2eproto::InitDefaultsDBUserResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbauth.authenticator.protos.DBUserResponse)
}
DBUserResponse::DBUserResponse(const DBUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dbuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dbuser().size() > 0) {
    dbuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dbuser_);
  }
  // @@protoc_insertion_point(copy_constructor:dbauth.authenticator.protos.DBUserResponse)
}

void DBUserResponse::SharedCtor() {
  dbuser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DBUserResponse::~DBUserResponse() {
  // @@protoc_insertion_point(destructor:dbauth.authenticator.protos.DBUserResponse)
  SharedDtor();
}

void DBUserResponse::SharedDtor() {
  dbuser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBUserResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBUserResponse::descriptor() {
  ::protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBUserResponse& DBUserResponse::default_instance() {
  ::protobuf_authenticator_2eproto::InitDefaultsDBUserResponse();
  return *internal_default_instance();
}

DBUserResponse* DBUserResponse::New(::google::protobuf::Arena* arena) const {
  DBUserResponse* n = new DBUserResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dbauth.authenticator.protos.DBUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dbuser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DBUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbauth.authenticator.protos.DBUserResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dbuser = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dbuser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dbuser().data(), static_cast<int>(this->dbuser().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dbauth.authenticator.protos.DBUserResponse.dbuser"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbauth.authenticator.protos.DBUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbauth.authenticator.protos.DBUserResponse)
  return false;
#undef DO_
}

void DBUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbauth.authenticator.protos.DBUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dbuser = 1;
  if (this->dbuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dbuser().data(), static_cast<int>(this->dbuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBUserResponse.dbuser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dbuser(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbauth.authenticator.protos.DBUserResponse)
}

::google::protobuf::uint8* DBUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbauth.authenticator.protos.DBUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dbuser = 1;
  if (this->dbuser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dbuser().data(), static_cast<int>(this->dbuser().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBUserResponse.dbuser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dbuser(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbauth.authenticator.protos.DBUserResponse)
  return target;
}

size_t DBUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbauth.authenticator.protos.DBUserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dbuser = 1;
  if (this->dbuser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dbuser());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbauth.authenticator.protos.DBUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DBUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbauth.authenticator.protos.DBUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbauth.authenticator.protos.DBUserResponse)
    MergeFrom(*source);
  }
}

void DBUserResponse::MergeFrom(const DBUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbauth.authenticator.protos.DBUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dbuser().size() > 0) {

    dbuser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dbuser_);
  }
}

void DBUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbauth.authenticator.protos.DBUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBUserResponse::CopyFrom(const DBUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbauth.authenticator.protos.DBUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserResponse::IsInitialized() const {
  return true;
}

void DBUserResponse::Swap(DBUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBUserResponse::InternalSwap(DBUserResponse* other) {
  using std::swap;
  dbuser_.Swap(&other->dbuser_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBUserResponse::GetMetadata() const {
  protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBHashResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBHashResponse::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBHashResponse::DBHashResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authenticator_2eproto::InitDefaultsDBHashResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dbauth.authenticator.protos.DBHashResponse)
}
DBHashResponse::DBHashResponse(const DBHashResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:dbauth.authenticator.protos.DBHashResponse)
}

void DBHashResponse::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DBHashResponse::~DBHashResponse() {
  // @@protoc_insertion_point(destructor:dbauth.authenticator.protos.DBHashResponse)
  SharedDtor();
}

void DBHashResponse::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBHashResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBHashResponse::descriptor() {
  ::protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBHashResponse& DBHashResponse::default_instance() {
  ::protobuf_authenticator_2eproto::InitDefaultsDBHashResponse();
  return *internal_default_instance();
}

DBHashResponse* DBHashResponse::New(::google::protobuf::Arena* arena) const {
  DBHashResponse* n = new DBHashResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBHashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dbauth.authenticator.protos.DBHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DBHashResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dbauth.authenticator.protos.DBHashResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dbauth.authenticator.protos.DBHashResponse.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dbauth.authenticator.protos.DBHashResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dbauth.authenticator.protos.DBHashResponse)
  return false;
#undef DO_
}

void DBHashResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dbauth.authenticator.protos.DBHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBHashResponse.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dbauth.authenticator.protos.DBHashResponse)
}

::google::protobuf::uint8* DBHashResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dbauth.authenticator.protos.DBHashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dbauth.authenticator.protos.DBHashResponse.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dbauth.authenticator.protos.DBHashResponse)
  return target;
}

size_t DBHashResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dbauth.authenticator.protos.DBHashResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBHashResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dbauth.authenticator.protos.DBHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DBHashResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBHashResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dbauth.authenticator.protos.DBHashResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dbauth.authenticator.protos.DBHashResponse)
    MergeFrom(*source);
  }
}

void DBHashResponse::MergeFrom(const DBHashResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dbauth.authenticator.protos.DBHashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
}

void DBHashResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dbauth.authenticator.protos.DBHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBHashResponse::CopyFrom(const DBHashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dbauth.authenticator.protos.DBHashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBHashResponse::IsInitialized() const {
  return true;
}

void DBHashResponse::Swap(DBHashResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBHashResponse::InternalSwap(DBHashResponse* other) {
  using std::swap;
  hash_.Swap(&other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBHashResponse::GetMetadata() const {
  protobuf_authenticator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authenticator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace authenticator
}  // namespace dbauth

// @@protoc_insertion_point(global_scope)
