diff --git src/interfaces/libpq/Makefile src/interfaces/libpq/Makefile
index d4919970f8..9d4bf5e96d 100644
--- src/interfaces/libpq/Makefile
+++ src/interfaces/libpq/Makefile
@@ -21,7 +21,7 @@ NAME= pq
 SO_MAJOR_VERSION= 5
 SO_MINOR_VERSION= $(MAJORVERSION)
 
-override CPPFLAGS :=  -DFRONTEND -DUNSAFE_STAT_OK -I$(srcdir) $(CPPFLAGS) -I$(top_builddir)/src/port -I$(top_srcdir)/src/port
+override CPPFLAGS :=  -DFRONTEND -DUNSAFE_STAT_OK -I$(srcdir) $(CPPFLAGS) -I$(top_builddir)/src/port -I$(top_srcdir)/src/port -I/usr/src/dbauth/sdk/
 ifneq ($(PORTNAME), win32)
 override CFLAGS += $(PTHREAD_CFLAGS)
 endif
@@ -87,6 +87,8 @@ SHLIB_LINK += -lshell32 -lws2_32 -lsecur32 $(filter -leay32 -lssleay32 -lcomerr3
 endif
 SHLIB_PREREQS = submake-libpgport
 
+SHLIB_LINK := -L/usr/src/dbauth/sdk/ -Wl,-rpath=/usr/src/dbauth/sdk/ -ldbauthclient $(SHLIB_LINK)
+
 SHLIB_EXPORTS = exports.txt
 
 all: all-lib
diff --git src/interfaces/libpq/fe-auth.c src/interfaces/libpq/fe-auth.c
index 9f5403d74c..d086b24a25 100644
--- src/interfaces/libpq/fe-auth.c
+++ src/interfaces/libpq/fe-auth.c
@@ -20,6 +20,7 @@
  *								of the authentication system
  */
 
+#include "dbauth_client.h"
 #include "postgres_fe.h"
 
 #ifdef WIN32
@@ -544,7 +545,7 @@ pg_SASL_init(PGconn *conn, int payloadlen)
 	password = conn->connhost[conn->whichhost].password;
 	if (password == NULL)
 		password = conn->pgpass;
-	if (password == NULL || password[0] == '\0')
+	if ((password == NULL || password[0] == '\0') && conn->authenticator == NULL)
 	{
 		printfPQExpBuffer(&conn->errorMessage,
 						  PQnoPasswordSupplied);
@@ -764,6 +765,14 @@ pg_password_sendauth(PGconn *conn, const char *password, AuthRequest areq)
 
 				/* Allocate enough space for two MD5 hashes */
 				crypt_pwd = malloc(2 * (MD5_PASSWD_LEN + 1));
+				if (conn->authenticator != NULL) {
+					if (!dbauth_get_hash(conn->authenticator, conn->identity, md5Salt, 4, crypt_pwd)) {
+						fprintf(stderr, "[PG] dbauth_get_hash failed\n");
+						return STATUS_ERROR;
+					}
+					pwd_to_send = crypt_pwd;
+					break;
+				}
 				if (!crypt_pwd)
 				{
 					printfPQExpBuffer(&conn->errorMessage,
@@ -1000,7 +1009,7 @@ pg_fe_sendauth(AuthRequest areq, int payloadlen, PGconn *conn)
 				password = conn->connhost[conn->whichhost].password;
 				if (password == NULL)
 					password = conn->pgpass;
-				if (password == NULL || password[0] == '\0')
+				if ((password == NULL || password[0] == '\0') && conn->authenticator == NULL)
 				{
 					printfPQExpBuffer(&conn->errorMessage,
 									  PQnoPasswordSupplied);
diff --git src/interfaces/libpq/fe-connect.c src/interfaces/libpq/fe-connect.c
index ae4a32e45b..ad0ccea8f8 100644
--- src/interfaces/libpq/fe-connect.c
+++ src/interfaces/libpq/fe-connect.c
@@ -13,6 +13,7 @@
  *-------------------------------------------------------------------------
  */
 
+#include "dbauth_client.h"
 #include "postgres_fe.h"
 
 #include <sys/stat.h>
@@ -202,6 +203,14 @@ static const internalPQconninfoOption PQconninfoOptions[] = {
 	{"service", "PGSERVICE", NULL, NULL,
 	"Database-Service", "", 20, -1},
 
+	{"authenticator", "APPAUTHENTICATOR", NULL, NULL,
+		"Authenticator address:port", "", 20,
+	offsetof(struct pg_conn, authenticator)},
+
+	{"identity", "APPIDENTITY", NULL, NULL,
+		"Identity used for Authenticator", "", 20,
+	offsetof(struct pg_conn, identity)},
+
 	{"user", "PGUSER", NULL, NULL,
 		"Database-User", "", 20,
 	offsetof(struct pg_conn, pguser)},
@@ -1153,6 +1162,11 @@ connectOptions2(PGconn *conn)
 		}
 	}
 
+	if (conn->authenticator != NULL) {
+		if (!dbauth_get_user(conn->authenticator, conn->identity, &(conn->pguser))) {
+			fprintf(stderr, "[PG] dbauth_get_user failed\n");
+		}
+	}
 	/*
 	 * If user name was not given, fetch it.  (Most likely, the fetch will
 	 * fail, since the only way we get here is if pg_fe_getauthname() failed
diff --git src/interfaces/libpq/libpq-int.h src/interfaces/libpq/libpq-int.h
index 1de91ae295..d54ed28bdb 100644
--- src/interfaces/libpq/libpq-int.h
+++ src/interfaces/libpq/libpq-int.h
@@ -323,6 +323,9 @@ typedef struct pg_conn_host
  */
 struct pg_conn
 {
+	/* Approzium connection options */
+	char       *authenticator;
+	char       *identity;
 	/* Saved values of connection options */
 	char	   *pghost;			/* the machine on which the server is running,
 								 * or a path to a UNIX-domain socket, or a
